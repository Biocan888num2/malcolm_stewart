"use client";

import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import { useState, useEffect } from 'react'; // Import useState and useEffect from React

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({ 
  children, 
}: Readonly<{ 
  children: React.ReactNode; 
}>) { 

  const [isZoomed, setIsZoomed] = useState(false);

  const handleDoubleClick = (e: MouseEvent) => { // Handle native MouseEvent
    try {
      if (!isZoomed) {
        document.body.style.transform = 'scale(1.5)'; // Adjust zoom scale as necessary
        document.body.style.transformOrigin = 'center center';
      } else {
        document.body.style.transform = 'scale(1)';
      }
      setIsZoomed(!isZoomed);
    } catch (error) {
      console.error('Error during double-click zoom:', error);
    }
  };

  useEffect(() => {
    document.addEventListener('dblclick', handleDoubleClick); // Attach native MouseEvent

    return () => {
      document.removeEventListener('dblclick', handleDoubleClick);
    };
  }, [isZoomed]);

  return ( 
    <html lang='en'> 
      <body 
        className={`${geistSans.variable} ${geistMono.variable} antialiased`} 
        onDoubleClick={(e) => handleDoubleClick(e.nativeEvent as MouseEvent)} // Handle React event and convert to native
      > 
        <Navbar /> 
        <main className='flex-grow pb-16'> 
          {children} 
        </main> 
        <Footer /> 
      </body> 
    </html> 
  ); 
}
